{"ast":null,"code":"var _jsxFileName = \"/Users/moemcd/Documents/DisWorldle/word-guessing-game/src/components/alerts/Alert.tsx\";\nimport { Fragment } from 'react';\nimport { Transition } from '@headlessui/react';\nimport classNames from 'classnames';\nimport './styles.css';\nimport lottie from \"lottie-web\";\nimport fireworks from '../../../public/fireworks.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Alert = _ref => {\n  var _s = $RefreshSig$();\n\n  let {\n    isOpen,\n    message,\n    variant = 'warning'\n  } = _ref;\n  const classes = classNames('fixed top-5 left-1/2 transform -translate-x-1/2 max-w-sm w-full shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden', {\n    'bg-rose-200': variant === 'warning',\n    'bg-blue-200 z-20': variant === 'success'\n  });\n\n  const Fireworks = () => {\n    _s();\n\n    const anime = useRef(null);\n    useEffect(() => {\n      lottie.loadAnimation({\n        container: anime.current,\n        renderer: \"svg\",\n        loop: true,\n        autoplay: true,\n        animationData: fireworks\n      });\n      return () => lottie.stop();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 250,\n        width: 300\n      },\n      ref: anime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s(Fireworks, \"ZW466ETntTl0aLN6E/1oKg46Egc=\");\n\n  return /*#__PURE__*/_jsxDEV(Transition, {\n    show: isOpen,\n    as: Fragment,\n    enter: \"ease-out duration-300 transition\",\n    enterFrom: \"opacity-0\",\n    enterTo: \"opacity-100\",\n    leave: \"transition ease-in duration-100\",\n    leaveFrom: \"opacity-100\",\n    leaveTo: \"opacity-0\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Lottie animations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lets use it with React.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsClicked(!isClicked),\n          children: [isClicked ? \"Hide\" : \"Show\", \" duck\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), isClicked && /*#__PURE__*/_jsxDEV(Duck, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-center font-medium text-gray-900\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/Users/moemcd/Documents/DisWorldle/word-guessing-game/src/components/alerts/Alert.tsx"],"names":["Fragment","Transition","classNames","lottie","fireworks","Alert","isOpen","message","variant","classes","Fireworks","anime","useRef","useEffect","loadAnimation","container","current","renderer","loop","autoplay","animationData","stop","height","width","setIsClicked","isClicked"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;AAQA,OAAO,MAAMC,KAAK,GAAG,QAAqD;AAAA;;AAAA,MAApD;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,OAAO,GAAG;AAA7B,GAAoD;AACxE,QAAMC,OAAO,GAAGP,UAAU,CACxB,2JADwB,EAExB;AACE,mBAAeM,OAAO,KAAK,SAD7B;AAEE,wBAAoBA,OAAO,KAAK;AAFlC,GAFwB,CAA1B;;AAQA,QAAME,SAAS,GAAG,MAAM;AAAA;;AACtB,UAAMC,KAAK,GAAGC,MAAM,CAAC,IAAD,CAApB;AACAC,IAAAA,SAAS,CAAC,MAAM;AACdV,MAAAA,MAAM,CAACW,aAAP,CAAqB;AACnBC,QAAAA,SAAS,EAAEJ,KAAK,CAACK,OADE;AAEnBC,QAAAA,QAAQ,EAAE,KAFS;AAGnBC,QAAAA,IAAI,EAAE,IAHa;AAInBC,QAAAA,QAAQ,EAAE,IAJS;AAKnBC,QAAAA,aAAa,EAAEhB;AALI,OAArB;AAOA,aAAO,MAAMD,MAAM,CAACkB,IAAP,EAAb;AACD,KATQ,EASN,EATM,CAAT;AAUA,wBAAO;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,GAAV;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAAZ;AAAyC,MAAA,GAAG,EAAEZ;AAA9C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAbD;;AATwE,KASlED,SATkE;;AAwBxE,sBACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAEJ,MADR;AAEE,IAAA,EAAE,EAAEN,QAFN;AAGE,IAAA,KAAK,EAAC,kCAHR;AAIE,IAAA,SAAS,EAAC,WAJZ;AAKE,IAAA,OAAO,EAAC,aALV;AAME,IAAA,KAAK,EAAC,iCANR;AAOE,IAAA,SAAS,EAAC,aAPZ;AAQE,IAAA,OAAO,EAAC,WARV;AAAA,2BAUE;AAAK,MAAA,SAAS,EAAES,OAAhB;AAAA,8BACA;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAQ,UAAA,OAAO,EAAE,MAAMe,YAAY,CAAC,CAACC,SAAF,CAAnC;AAAA,qBACGA,SAAS,GAAG,MAAH,GAAY,MADxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,EAOCA,SAAS,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAPd;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAUE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,+CAAb;AAAA,oBACGlB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CArDM;KAAMF,K","sourcesContent":["import { Fragment } from 'react'\nimport { Transition } from '@headlessui/react'\nimport classNames from 'classnames'\nimport './styles.css';\nimport lottie from \"lottie-web\";\nimport fireworks from '../../../public/fireworks.json';\n\ntype Props = {\n  isOpen: boolean\n  message: string\n  variant?: 'success' | 'warning'\n}\n\nexport const Alert = ({ isOpen, message, variant = 'warning' }: Props) => {\n  const classes = classNames(\n    'fixed top-5 left-1/2 transform -translate-x-1/2 max-w-sm w-full shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden',\n    {\n      'bg-rose-200': variant === 'warning',\n      'bg-blue-200 z-20': variant === 'success',\n    }\n  )\n\n  const Fireworks = () => {\n    const anime = useRef(null);\n    useEffect(() => {\n      lottie.loadAnimation({\n        container: anime.current,\n        renderer: \"svg\",\n        loop: true,\n        autoplay: true,\n        animationData: fireworks,\n      });\n      return () => lottie.stop();\n    }, []);\n    return <div style={{ height: 250, width: 300 }} ref={anime}></div>;\n  };\n\n  return (\n    <Transition\n      show={isOpen}\n      as={Fragment}\n      enter=\"ease-out duration-300 transition\"\n      enterFrom=\"opacity-0\"\n      enterTo=\"opacity-100\"\n      leave=\"transition ease-in duration-100\"\n      leaveFrom=\"opacity-100\"\n      leaveTo=\"opacity-0\"\n    >\n      <div className={classes}>\n      <div>\n      <h1>Lottie animations.</h1>\n      <p>Lets use it with React.js</p>\n      <br />\n      <button onClick={() => setIsClicked(!isClicked)}>\n        {isClicked ? \"Hide\" : \"Show\"} duck\n      </button>\n      {isClicked && <Duck />}\n    </div>\n        <div className=\"p-4\">\n          <p className=\"text-sm text-center font-medium text-gray-900\">\n            {message}\n          </p>\n        </div>\n      </div>\n    </Transition>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}